{"version":3,"file":"component---src-pages-guides-application-state-md-9072c54a5de3f44640ed.js","mappings":"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","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/application_state.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dealing-with-application-state\"\n    }}>{`Dealing with Application State`}</h1>\n    <p>{`Application state could be a pre-defined variable of your action that is accessible across all invocations, or dynamic values or files uploaded by the web users when the app is running. App Builder provides the appropriate tools to handle each of these requirements.`}</p>\n    <h2 {...{\n      \"id\": \"default-parameters\"\n    }}>{`Default parameters`}</h2>\n    <p>{`Sometimes you want to bind the same parameter values for all invocations or you just set default values of your action. In either case, you have two different options: setting params at the action level, or at the package level (so all actions in that package can inherit them). These params are set in the `}<inlineCode parentName=\"p\">{`manifest.yaml`}</inlineCode>{` file, as the following example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`hello-world:\n  function: actions/hello/index.js\n  inputs:\n    name: Joe\n`}</code></pre>\n    <p>{`In many cases, these variables are different depending on the build environment of the app, such as different tenant names in dev, stage, prod, etc. To make it work seamlessly with Git commits, you could store the real value of the variables in the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file (which is not committed to Git), and reference them in the `}<inlineCode parentName=\"p\">{`manifest.yaml`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# in .env\nNAME=Joe\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# in manifest.yaml\nhello-world:\n  function: actions/hello/index.js\n  inputs:\n    name: $NAME\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"considerations-about-security\"\n    }}>{`Considerations about security`}</h3>\n    <p>{`For authentication with Adobe APIs, you should leverage `}<a parentName=\"p\" {...{\n        \"href\": \"security/index.md\"\n      }}>{`App Builder Security Guideline`}</a>{` using our supported SDKs.`}</p>\n    <p>{`For other 3rd party systems and APIs when provisioning actions with the secrets/passwords is a must, you can then use the default params as demonstrated above. In order to support this use case, all default params are automatically encrypted. They are decrypted just before the action code is executed. Thus, the only time you have access to the decrypted value is while executing the action code.`}</p>\n    <h2 {...{\n      \"id\": \"persistence-at-runtime\"\n    }}>{`Persistence at runtime`}</h2>\n    <p>{`As part of App Builder, you will have out-of-the-box access to `}<em parentName=\"p\">{`Files`}</em>{` and `}<em parentName=\"p\">{`State`}</em>{`, our two storage services meant for persisting data dynamically from your Runtime actions.`}</p>\n    <p>{`No pre-configuration is required, just install the libraries and use them in your project. We will be transparently using your AppBuilder credentials to authorize and entitle your requests.`}</p>\n    <p><em parentName=\"p\">{`When should I use Files vs State?`}</em></p>\n    <ul>\n      <li parentName=\"ul\">{`Files is good for bandwidth and State is good for latency.`}</li>\n      <li parentName=\"ul\">{`Files supports sharing data via presigned-url, State supports setting expirations.`}</li>\n      <li parentName=\"ul\">{`As a rule of thumb if you expect your data to grow larger than 100KBs go with Files, otherwise use State.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h2>\n    <p><strong parentName=\"p\">{`*We are introducing major changes for State`}</strong>{`, now hosting our storage service. The documentation refers to the new version which is still in `}<strong parentName=\"p\">{`developer preview`}</strong>{`. Documentation for the last stable version based on CosmosDB is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-state/tree/3.x\"\n      }}>{`here`}</a>{`*`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`How is my data stored?`}</em></strong></p>\n    <ul>\n      <li parentName=\"ul\">{`State is a multi-tenant storage, your data is isolated in a \"State container\" mapping to the I/O Runtime namespace and application Workspace.`}</li>\n      <li parentName=\"ul\">{`Each region stores your data independently, treat it as a different instance. We support `}<inlineCode parentName=\"li\">{`amer`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`emea`}</inlineCode>{`. `}<em parentName=\"li\"><inlineCode parentName=\"em\">{`apac`}</inlineCode>{` is coming soon.`}</em></li>\n      <li parentName=\"ul\">{`Note the default time-to-live for a key-value which is 1 day, the maximum is 1 year (365 days).`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting started`}</h3>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Library usage, from an I/O Runtime Action:`}</em></strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @adobe/aio-lib-state@next\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  const stateLib = require('@adobe/aio-lib-state')\n\n  // init with implicit I/O Runtime credentials, default region is 'amer'.\n  const state = await stateLib.init()\n  // set an explicit region\n  const state2 = await stateLib.init({ region: 'emea' })\n\n  // get\n  const res = await state.get('key') // res = { value, expiration }\n  const value = res.value\n  // put\n  await state.put('key', 'value') // with default ttl\n  await state.put('another key', 'another value', { ttl: 200 }) // in seconds, use -1 for max.\n  // delete\n  await state.delete('key')\n  // delete all keys and values\n  await state.deleteAll()\n  // returns usage statistics (storage)\n  await state.stats()\n  // returns true if you have at least one key and value\n  await state.any()\n\n  // coming soon!\n  // await state.listKeys()\n`}</code></pre>\n    <p>{`Explore the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-state/blob/main/doc/api.md\"\n      }}>{`full API`}</a></p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`CLI usage, from your local machine`}</em></strong>{`: `}<em parentName=\"p\">{`coming soon!`}</em></p>\n    <h3 {...{\n      \"id\": \"limits--validation-preview\"\n    }}>{`Limits & validation (preview)`}</h3>\n    <p>{`Limits are enforced and can't be changed on a per-user basis.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`State is only available to Runtime Namespaces that follow the AppBuilder format: `}<inlineCode parentName=\"li\">{`amsorg-project(-workspace)?`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Max state value size: `}<inlineCode parentName=\"li\">{`1MB`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Max state key size: `}<inlineCode parentName=\"li\">{`1024 bytes`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Max-supported TTL is `}<inlineCode parentName=\"li\">{`365 days`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Values format: any `}<inlineCode parentName=\"li\">{`string|binary`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Keys format: `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{` only `}<inlineCode parentName=\"li\">{`alphanumeric`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`-`}</inlineCode>{`,`}<inlineCode parentName=\"li\">{`_`}</inlineCode>{`,`}<inlineCode parentName=\"li\">{`.`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"quotas-preview\"\n    }}>{`Quotas (preview)`}</h3>\n    <p>{`Quotas are limits that depend on the organization's entitlements. Every organization with AppBuilder access is entitled to at least 1 State quota.`}</p>\n    <p>{`At the organization level, 1 quota provides:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`200GB/month bandwidth usage (~5MB/min): `}<inlineCode parentName=\"li\">{`bandwidth usage = bytes uploaded + bytes downloaded`}</inlineCode></li>\n      <li parentName=\"ul\">{`1GB storage: `}<inlineCode parentName=\"li\">{`storage usage = 2 * key_sizes + value_sizes`}</inlineCode></li>\n    </ul>\n    <p>{`The quota is shared for all State Containers in the organization, across all regions. It is not enforced for now, just tracked.`}</p>\n    <p><em parentName=\"p\">{`Example: org 123 is entitled to 3 quotas, the total bandwidth usage of the organization should not exceed 600GB/month and the storage across regions should not exceed 3GB`}</em></p>\n    <p>{`We also enforce rate-limiting at the State Container (=Workspace) level. Rate-limiting per quota unit is defined as:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`10MB/min with up to 1MB/sec peaks for production Workspaces.`}</li>\n      <li parentName=\"ul\">{`2MB/min with up to 1MB/sec peaks for non-production Workspaces.`}</li>\n    </ul>\n    <p>{`In case of exceeding the rate-limiting quota, the State service will return with 429s. However, a retry mechanism in the State library will mitigate the propagation of the error on short time windows.`}</p>\n    <p><em parentName=\"p\">{`Example: org 123 is entitled to 5 quotas, any production workspace will not be throttled before consuming 50MB/min or 5MB/sec bandwidth`}</em></p>\n    <h3 {...{\n      \"id\": \"troubleshooting\"\n    }}>{`Troubleshooting`}</h3>\n    <p>{`Set `}<inlineCode parentName=\"p\">{`DEBUG=@adobe/aio-lib-state*`}</inlineCode>{` to see debug logs.`}</p>\n    <h2 {...{\n      \"id\": \"files\"\n    }}>{`Files`}</h2>\n    <p><em parentName=\"p\">{`Files is currently implemented as an abstraction layer over Azure Blob. Major changes and additional features are planned, stay tuned.`}</em></p>\n    <p>{`To learn more please visit the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files\"\n      }}>{`Adobe I/O File Storage library`}</a>{` repository.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}