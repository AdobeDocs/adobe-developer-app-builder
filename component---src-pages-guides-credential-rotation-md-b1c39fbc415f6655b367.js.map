{"version":3,"file":"component---src-pages-guides-credential-rotation-md-b1c39fbc415f6655b367.js","mappings":"oOAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,uBADR,wBAGA,8OACA,eACE,GAAM,0BADR,4BAGA,qNAAsM,eAAIC,WAAW,KAAf,sBACtM,eACE,GAAM,6BADR,8BAGA,uFAAwE,uBAAYA,WAAW,KAAvB,6BAAxE,cACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,ynBAeL,SAACV,EAAD,CAAaW,MAAM,OAAOF,QAAQ,iBAClC,+EAAgE,uBAAYC,WAAW,KAAvB,UAAhE,wDAGH,CAEDH,EAAWK,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/credential-rotation.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"credential-rotation\"\n    }}>{`Credential Rotation`}</h1>\n    <p>{`Eventually you will need to rotate your credentials to make sure everything remains secure.  This guide outlines best practices you can use to update the parameters ( aka inputs ) to your actions without disruption.`}</p>\n    <h2 {...{\n      \"id\": \"why-rotate-credentials\"\n    }}>{`Why rotate credentials?`}</h2>\n    <p>{`It is possible your credentials were leaked somehow, either by appearing in a errant log, or maybe a developer has left the team ... and it is just good practice to periodically rotate them. `}<em parentName=\"p\">{`because security`}</em></p>\n    <h2 {...{\n      \"id\": \"how-to-rotate-credentials\"\n    }}>{`How to rotate credentials`}</h2>\n    <p>{`In order to update the inputs for a particular action we use the `}<inlineCode parentName=\"p\">{`aio runtime action update`}</inlineCode>{` command.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`➜ aio runtime action update <action-name> --param <param-name> <param-value>\n# here's a concrete version\n➜ aio rt action update dx-excshell-1/generic -p=DEBUG silly\n\n# you can specify multiple values in several ways\n\n# firstly, just a list of key value pairs\n➜ aio runtime action update <action-name> --param <param-name> <param-value> <param-name> <param-value> <param-name> <param-value>\n\n# secondly, you can use the --param flag more than once .. here we use the shortened version -p\n➜ aio rt action update <action-name> -p <param-name> <param-value> -p <param-name> <param-value> -p <param-name> <param-value>\n\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Very important! You must pass ALL parameters in a single `}<inlineCode parentName=\"p\">{`update`}</inlineCode>{` call.  Any parameters not specified will disappear.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}