{"version":3,"file":"component---src-pages-guides-packaging-md-f08d2e3f03cfad07c8ee.js","mappings":"2SAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,wCADR,yCAGA,6DAA8C,cAAGC,WAAW,IACxD,KAAQ,uDADkC,gCAA9C,mCAGA,0BAAW,uBAAYA,WAAW,KAAvB,gBAAX,gGACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,oBAIL,gHAAiG,uBAAYA,WAAW,KAAvB,gBAAjG,MACA,eACE,GAAM,kBADR,mBAGA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,mBAApB,KACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,oHAGJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,YACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,uCAA2D,uBAAYA,WAAW,MAAvB,SAA3D,oDAGJ,eAAIA,WAAW,MAAf,mFACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,uBAA2C,uBAAYA,WAAW,MAAvB,gBAC3C,eAAIA,WAAW,MAAf,uBAA2C,uBAAYA,WAAW,MAAvB,gBAC3C,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,QAA5B,aACA,eAAIA,WAAW,MAAf,0CACA,eAAIA,WAAW,MAAf,oDAGJ,eAAIA,WAAW,MAAf,oDAEF,eACE,GAAM,SADR,UAGA,8BAAe,cAAGA,WAAW,IACzB,KAAQ,kBADG,SAAf,wGAGA,oBACE,eAAIA,WAAW,MAAf,aACA,eAAIA,WAAW,MAAf,eAEF,2EACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,aAApB,oEACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,mBAApB,oHAIL,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/packaging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"packaging-for-developer-distribution\"\n    }}>{`Packaging for Developer Distribution`}</h1>\n    <p>{`To get your App Builder app listed for `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-distribution/\"\n      }}>{`Adobe Developer Distribution`}</a>{`, you will need to package it.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`aio app pack`}</inlineCode>{` command will verify and bundle your app. In the root of your app folder, run this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`aio app pack\n`}</code></pre>\n    <p>{`After this command completes running, you can find the app package in your app folder as: `}<inlineCode parentName=\"p\">{`dist/app.zip`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"app-validation\"\n    }}>{`App Validation`}</h2>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`app.config.yaml`}</inlineCode>{` `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`will be checked if it is in a valid format, and will show specific config errors for you to fix, if necessary`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`package.json`}</inlineCode>{` version`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`application version format must be `}<inlineCode parentName=\"li\">{`X.Y.Z`}</inlineCode>{`, where X, Y, and Z are non-negative integers`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`files to be packaged. All the files in your app folder will be packaged EXCEPT:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`files specified in `}<inlineCode parentName=\"li\">{`.gitignore`}</inlineCode></li>\n          <li parentName=\"ul\">{`files specified in `}<inlineCode parentName=\"li\">{`.npmignore`}</inlineCode></li>\n          <li parentName=\"ul\">{`any `}<inlineCode parentName=\"li\">{`dist`}</inlineCode>{` folders`}</li>\n          <li parentName=\"ul\">{`any dot files (.env, .gitignore, etc)`}</li>\n          <li parentName=\"ul\">{`any OS junk files (.DS_Store, thumbs.db, etc)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`event registrations will be validated (if any)`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h2>\n    <p>{`Two new `}<a parentName=\"p\" {...{\n        \"href\": \"./app-hooks.md\"\n      }}>{`hooks`}</a>{` have been added for this command, and will run before and after the command is run (respectively):`}</p>\n    <ol>\n      <li parentName=\"ol\">{`pre-pack`}</li>\n      <li parentName=\"ol\">{`post-pack`}</li>\n    </ol>\n    <p>{`Your hook handler function will be passed two items:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`appConfig`}</inlineCode>{` (object) - this contains the config of the current application`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`artifactsFolder`}</inlineCode>{` (string) - this will be the location of the folder containing all the packaging artifacts that will be bundled`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}