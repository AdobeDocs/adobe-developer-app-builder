{"version":3,"file":"component---src-pages-guides-exc-app-modules-user-md-30da1f6a33cdceca488b.js","mappings":"kTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,wBACJ,0BACJA,EAAAA,EAAAA,KAAA,SAAI,sRAGJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAIH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UAAU,cACnDH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,+CAENH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAIH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UAAU,sBACnDH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,mDACN,aACNH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAIH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UAAU,aACnDH,EAAAA,EAAAA,KAAA,SAAI,iFACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,6XAcNH,EAAAA,EAAAA,KAAA,MACE,GAAM,qBACJ,sBACJA,EAAAA,EAAAA,KAAA,SAAI,kGACJA,EAAAA,EAAAA,KAAA,SAAI,gHACKA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,6BAA0C,+CACjFH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,4BAAyC,sBAAqBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,4BAAyC,+CAC/IH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,4BAAyC,8IAEnFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,4RAeNH,EAAAA,EAAAA,KAAA,MACE,GAAM,SACJ,UACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,cACJ,eACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KAC9B,KAAQ,iCACN,aACNH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KAC9B,KAAQ,kCACN,cAIZ,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/exc_app/modules/user.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"external-module-user\"\n    }}>{`External module: user`}</h1>\n    <p>{`API to request user-specific information such as IMS organization, IMS profile, access token,\ntenant, etc. It also  provides solutions with other capabilities such as notifying the shell that\nthe session has expired and configuring a logout URL to expire custom sessions.`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Import:`}</em></strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import user from '@adobe/exc-app/user';\n`}</code></pre>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Default export:`}</em></strong></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../interfaces/user.userapi.md#interface-userapi\"\n      }}>{`UserApi`}</a></p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Usage:`}</em></strong></p>\n    <p>{`Below is an example of how to get various attributes associated to the user:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import user from '@adobe/exc-app/user';\n\nconst [org, name, orgs, token, profile, locale, subOrg, tenant, languages] = await Promise.all([\n  user.get('imsOrg'),\n  user.get('imsOrgName'),\n  user.get('imsOrgs'),\n  user.get('imsToken'),\n  user.get('imsProfile'),\n  user.get('locale'),\n  user.get('subOrg'),\n  user.get('tenant'),\n  user.get('preferredLanguages')\n]);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"receiving-updates\"\n    }}>{`Receiving updates`}</h3>\n    <p>{`You can also listen for updates on the requested data by listening to specific change events.`}</p>\n    <p>{`These change events are emitted from the api that the data is requested from. For example, if a\nuser calls `}<inlineCode parentName=\"p\">{`await user.get('locale');`}</inlineCode>{` they must listen for the change event on\n`}<inlineCode parentName=\"p\">{`user.on('change:locale')`}</inlineCode>{`. If a user calls `}<inlineCode parentName=\"p\">{`await user.get('imsOrg')`}</inlineCode>{` they must listen for the\nchange event on `}<inlineCode parentName=\"p\">{`user.on('change:imsOrg')`}</inlineCode>{`. Here is a more detailed example of how the promise\napi and change events can be used to keep track of specific values from the config:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import user from '@adobe/exc-app/user';\n\nconstructor() {\n  this.state = {org: null, shell: {}};\n\n  user.on('change:imsOrg', (org) => {\n    this.setState({org});\n  });\n}\n\nasync componentDidMount() {\n  const org = await user.get('imsOrg');\n  this.setState({org});\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"index\"\n    }}>{`Index`}</h2>\n    <h3 {...{\n      \"id\": \"interfaces\"\n    }}>{`Interfaces`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/user.userapi.md\"\n        }}>{`UserApi`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/user.userinfo.md\"\n        }}>{`UserInfo`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}